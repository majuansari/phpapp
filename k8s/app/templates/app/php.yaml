apiVersion: apps/v1beta2 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate      
  replicas: {{ .Values.app.replicaCount }}
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: {{ .Values.app.name }}
    spec:
      volumes:
        - name: code
          emptyDir: {}
        - name: cmd
          emptyDir: {}
        # those should be changed to persistent storage
        # emptyDir is only for the demo purposes
        # - name: storage
        #   emptyDir: {}
        # - name: uploads
        #   emptyDir: {} 
                   
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        ports:
        - containerPort: 9000
{{- with .Values.app.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}

{{- with .Values.app.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}

{{- with .Values.app.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}

{{- with .Values.app.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}        
      # init container will copy application into the emptydir volume
      # to share it with php-fpm & nginx containers on the pod
      # initContainers:
      #   - name: {{ .Chart.Name }}
      #     image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
      #     command: [ "composer", "install", "-d=/code" ]
      #     imagePullPolicy: Always
      #     volumeMounts:
      #       - name: code
      #         mountPath: /code
      #       - name: cmd
      #         mountPath: /cmd      

      initContainers:
        - args:
            - /bin/bash
            - -c
            - (composer install -d /code || true)  && sleep 10
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: Always
          name: {{ .Chart.Name }}
          volumeMounts:
            - name: code
              mountPath: /code
            - name: cmd
              mountPath: /cmd            
---
kind: Service
apiVersion: v1
metadata:
  name: php-service
spec:
  selector:
    app: {{ .Values.app.name }}
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 9000
    targetPort: 9000
